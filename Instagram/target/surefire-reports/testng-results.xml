<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="21" passed="18">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/muhtasimmahir/IdeaProjects/Group4ProjectWebAutomation/Instagram/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite name="Amazon Automation Script " duration-ms="77196" started-at="2019-04-14T16:51:14Z" finished-at="2019-04-14T16:52:31Z">
    <groups>
    </groups>
    <test name="Instagram Home Page" duration-ms="77196" started-at="2019-04-14T16:51:14Z" finished-at="2019-04-14T16:52:31Z">
      <class name="tests.LogInTester">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.LogInTester@4439f31e]" name="setUp" is-config="true" duration-ms="1942" started-at="2019-04-14T16:52:19Z" finished-at="2019-04-14T16:52:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.LogInTester@4439f31e]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:21Z" finished-at="2019-04-14T16:52:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LogInTester.ClickLogIn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:tests.LogInTester@4439f31e]" name="initialize" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:21Z" finished-at="2019-04-14T16:52:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="FAIL" signature="ClickLogIn()[pri:0, instance:tests.LogInTester@4439f31e]" name="ClickLogIn" duration-ms="10139" started-at="2019-04-14T16:52:21Z" finished-at="2019-04-14T16:52:31Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//input[@id='f17d97b343e1604']"}
  (Session info: chrome=73.0.3683.103)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Muhtasims-MBP.fios-router.home', ip: 'fe80:0:0:0:1890:25ad:2277:411d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/s4/_c1dgkkj4mg...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:56333}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.103, webStorageEnabled: true}
Session ID: f3645f5edec15c898ad7bec9f315af32
*** Element info: {Using=xpath, value=//input[@id='f17d97b343e1604']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@id='f17d97b343e1604']"}
  (Session info: chrome=73.0.3683.103)
  (Driver info: chromedriver=2.46.628411 (3324f4c8be9ff2f70a05a30ebc72ffb013e1a71e),platform=Mac OS X 10.14.4 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Muhtasims-MBP.fios-router.home', ip: 'fe80:0:0:0:1890:25ad:2277:411d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.46.628411 (3324f4c8be9ff2..., userDataDir: /var/folders/s4/_c1dgkkj4mg...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:56333}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.103, webStorageEnabled: true}
Session ID: f3645f5edec15c898ad7bec9f315af32
*** Element info: {Using=xpath, value=//input[@id='f17d97b343e1604']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy11.sendKeys(Unknown Source)
at pages.LogInPage.ClickLoginKey(LogInPage.java:30)
at tests.LogInTester.ClickLogIn(LogInTester.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLogIn -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.LogInTester@4439f31e]" name="afterEachTestMethod" is-config="true" duration-ms="526" started-at="2019-04-14T16:52:31Z" finished-at="2019-04-14T16:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLogIn status=FAILURE method=LogInTester.ClickLogIn()[pri:0, instance:tests.LogInTester@4439f31e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.LogInTester@4439f31e]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:31Z" finished-at="2019-04-14T16:52:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- tests.LogInTester -->
      <class name="tests.InstaTester">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:tests.InstaTester@215be6bb]" name="extentSetup" is-config="true" duration-ms="102" started-at="2019-04-14T16:51:14Z" finished-at="2019-04-14T16:51:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@65ec8b24]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/muhtasimmahir/IdeaProjects/Group4ProjectWebAutomation/Instagram/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="2398" started-at="2019-04-14T16:51:14Z" finished-at="2019-04-14T16:51:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="3" started-at="2019-04-14T16:51:17Z" finished-at="2019-04-14T16:51:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickAPI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="18" started-at="2019-04-14T16:51:17Z" finished-at="2019-04-14T16:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickAPI()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickAPI" duration-ms="383" started-at="2019-04-14T16:51:17Z" finished-at="2019-04-14T16:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAPI -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="286" started-at="2019-04-14T16:51:17Z" finished-at="2019-04-14T16:51:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAPI status=SUCCESS method=InstaTester.ClickAPI()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:17Z" finished-at="2019-04-14T16:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1967" started-at="2019-04-14T16:51:17Z" finished-at="2019-04-14T16:51:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:19Z" finished-at="2019-04-14T16:51:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickAboutUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:19Z" finished-at="2019-04-14T16:51:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickAboutUs()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickAboutUs" duration-ms="451" started-at="2019-04-14T16:51:19Z" finished-at="2019-04-14T16:51:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAboutUs -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="112" started-at="2019-04-14T16:51:20Z" finished-at="2019-04-14T16:51:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAboutUs status=SUCCESS method=InstaTester.ClickAboutUs()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:20Z" finished-at="2019-04-14T16:51:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="4018" started-at="2019-04-14T16:51:20Z" finished-at="2019-04-14T16:51:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:24Z" finished-at="2019-04-14T16:51:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:24Z" finished-at="2019-04-14T16:51:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickDirectory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickDirectory()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickDirectory" duration-ms="458" started-at="2019-04-14T16:51:24Z" finished-at="2019-04-14T16:51:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDirectory -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="106" started-at="2019-04-14T16:51:24Z" finished-at="2019-04-14T16:51:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDirectory status=SUCCESS method=InstaTester.ClickDirectory()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:24Z" finished-at="2019-04-14T16:51:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1818" started-at="2019-04-14T16:51:24Z" finished-at="2019-04-14T16:51:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:26Z" finished-at="2019-04-14T16:51:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:26Z" finished-at="2019-04-14T16:51:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickHashtags()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickHashtags()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickHashtags" duration-ms="425" started-at="2019-04-14T16:51:26Z" finished-at="2019-04-14T16:51:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickHashtags -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="106" started-at="2019-04-14T16:51:27Z" finished-at="2019-04-14T16:51:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickHashtags status=SUCCESS method=InstaTester.ClickHashtags()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:27Z" finished-at="2019-04-14T16:51:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1876" started-at="2019-04-14T16:51:27Z" finished-at="2019-04-14T16:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="ClickJobs()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickJobs" duration-ms="706" started-at="2019-04-14T16:51:29Z" finished-at="2019-04-14T16:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickJobs -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:29Z" finished-at="2019-04-14T16:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:29Z" finished-at="2019-04-14T16:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="112" started-at="2019-04-14T16:51:29Z" finished-at="2019-04-14T16:51:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickJobs status=SUCCESS method=InstaTester.ClickJobs()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:29Z" finished-at="2019-04-14T16:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1851" started-at="2019-04-14T16:51:29Z" finished-at="2019-04-14T16:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:31Z" finished-at="2019-04-14T16:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickLanguage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:31Z" finished-at="2019-04-14T16:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickLanguage()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickLanguage" duration-ms="155" started-at="2019-04-14T16:51:31Z" finished-at="2019-04-14T16:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLanguage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="103" started-at="2019-04-14T16:51:31Z" finished-at="2019-04-14T16:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLanguage status=SUCCESS method=InstaTester.ClickLanguage()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:31Z" finished-at="2019-04-14T16:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1906" started-at="2019-04-14T16:51:31Z" finished-at="2019-04-14T16:51:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:33Z" finished-at="2019-04-14T16:51:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickLogIn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:33Z" finished-at="2019-04-14T16:51:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickLogIn()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickLogIn" duration-ms="107" started-at="2019-04-14T16:51:33Z" finished-at="2019-04-14T16:51:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLogIn -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="100" started-at="2019-04-14T16:51:33Z" finished-at="2019-04-14T16:51:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLogIn status=SUCCESS method=InstaTester.ClickLogIn()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:34Z" finished-at="2019-04-14T16:51:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="2002" started-at="2019-04-14T16:51:34Z" finished-at="2019-04-14T16:51:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:36Z" finished-at="2019-04-14T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:36Z" finished-at="2019-04-14T16:51:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickPress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickPress()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickPress" duration-ms="568" started-at="2019-04-14T16:51:36Z" finished-at="2019-04-14T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPress -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="104" started-at="2019-04-14T16:51:36Z" finished-at="2019-04-14T16:51:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPress status=SUCCESS method=InstaTester.ClickPress()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1910" started-at="2019-04-14T16:51:36Z" finished-at="2019-04-14T16:51:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:36Z" finished-at="2019-04-14T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:38Z" finished-at="2019-04-14T16:51:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:38Z" finished-at="2019-04-14T16:51:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickPrivacy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickPrivacy()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickPrivacy" duration-ms="7063" started-at="2019-04-14T16:51:38Z" finished-at="2019-04-14T16:51:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPrivacy -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="107" started-at="2019-04-14T16:51:45Z" finished-at="2019-04-14T16:51:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPrivacy status=SUCCESS method=InstaTester.ClickPrivacy()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:45Z" finished-at="2019-04-14T16:51:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1858" started-at="2019-04-14T16:51:45Z" finished-at="2019-04-14T16:51:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:47Z" finished-at="2019-04-14T16:51:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickProfiles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:47Z" finished-at="2019-04-14T16:51:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickProfiles()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickProfiles" duration-ms="443" started-at="2019-04-14T16:51:47Z" finished-at="2019-04-14T16:51:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickProfiles -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="102" started-at="2019-04-14T16:51:48Z" finished-at="2019-04-14T16:51:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickProfiles status=SUCCESS method=InstaTester.ClickProfiles()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:48Z" finished-at="2019-04-14T16:51:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1862" started-at="2019-04-14T16:51:48Z" finished-at="2019-04-14T16:51:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:50Z" finished-at="2019-04-14T16:51:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:50Z" finished-at="2019-04-14T16:51:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickSignUp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickSignUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickSignUp" duration-ms="93" started-at="2019-04-14T16:51:50Z" finished-at="2019-04-14T16:51:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSignUp -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="98" started-at="2019-04-14T16:51:50Z" finished-at="2019-04-14T16:51:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSignUp status=SUCCESS method=InstaTester.ClickSignUp()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:50Z" finished-at="2019-04-14T16:51:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1934" started-at="2019-04-14T16:51:50Z" finished-at="2019-04-14T16:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:52Z" finished-at="2019-04-14T16:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickSupport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:51:52Z" finished-at="2019-04-14T16:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickSupport()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickSupport" duration-ms="6840" started-at="2019-04-14T16:51:52Z" finished-at="2019-04-14T16:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSupport -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="112" started-at="2019-04-14T16:51:59Z" finished-at="2019-04-14T16:51:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSupport status=SUCCESS method=InstaTester.ClickSupport()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:51:59Z" finished-at="2019-04-14T16:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="2020" started-at="2019-04-14T16:51:59Z" finished-at="2019-04-14T16:52:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:01Z" finished-at="2019-04-14T16:52:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickTerms()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickTerms()[pri:0, instance:tests.InstaTester@215be6bb]" name="ClickTerms" duration-ms="7044" started-at="2019-04-14T16:52:01Z" finished-at="2019-04-14T16:52:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickTerms -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:01Z" finished-at="2019-04-14T16:52:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="112" started-at="2019-04-14T16:52:08Z" finished-at="2019-04-14T16:52:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickTerms status=SUCCESS method=InstaTester.ClickTerms()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:08Z" finished-at="2019-04-14T16:52:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="2026" started-at="2019-04-14T16:52:08Z" finished-at="2019-04-14T16:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:10Z" finished-at="2019-04-14T16:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterEmailOrPhone()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:10Z" finished-at="2019-04-14T16:52:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="EnterEmailOrPhone()[pri:0, instance:tests.InstaTester@215be6bb]" name="EnterEmailOrPhone" duration-ms="215" started-at="2019-04-14T16:52:10Z" finished-at="2019-04-14T16:52:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterEmailOrPhone -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="98" started-at="2019-04-14T16:52:10Z" finished-at="2019-04-14T16:52:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterEmailOrPhone status=SUCCESS method=InstaTester.EnterEmailOrPhone()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:10Z" finished-at="2019-04-14T16:52:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1983" started-at="2019-04-14T16:52:10Z" finished-at="2019-04-14T16:52:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:12Z" finished-at="2019-04-14T16:52:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterFullName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:12Z" finished-at="2019-04-14T16:52:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="EnterFullName()[pri:0, instance:tests.InstaTester@215be6bb]" name="EnterFullName" duration-ms="145" started-at="2019-04-14T16:52:12Z" finished-at="2019-04-14T16:52:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterFullName -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="114" started-at="2019-04-14T16:52:12Z" finished-at="2019-04-14T16:52:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterFullName status=SUCCESS method=InstaTester.EnterFullName()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:12Z" finished-at="2019-04-14T16:52:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1869" started-at="2019-04-14T16:52:12Z" finished-at="2019-04-14T16:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:14Z" finished-at="2019-04-14T16:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:14Z" finished-at="2019-04-14T16:52:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="EnterPassword()[pri:0, instance:tests.InstaTester@215be6bb]" name="EnterPassword" duration-ms="129" started-at="2019-04-14T16:52:14Z" finished-at="2019-04-14T16:52:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterPassword -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="101" started-at="2019-04-14T16:52:14Z" finished-at="2019-04-14T16:52:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterPassword status=SUCCESS method=InstaTester.EnterPassword()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:15Z" finished-at="2019-04-14T16:52:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1865" started-at="2019-04-14T16:52:15Z" finished-at="2019-04-14T16:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:16Z" finished-at="2019-04-14T16:52:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:16Z" finished-at="2019-04-14T16:52:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="EnterUsername()[pri:0, instance:tests.InstaTester@215be6bb]" name="EnterUsername" duration-ms="127" started-at="2019-04-14T16:52:16Z" finished-at="2019-04-14T16:52:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterUsername -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="97" started-at="2019-04-14T16:52:17Z" finished-at="2019-04-14T16:52:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterUsername status=SUCCESS method=InstaTester.EnterUsername()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T16:52:17Z" finished-at="2019-04-14T16:52:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@215be6bb]" name="setUp" is-config="true" duration-ms="1933" started-at="2019-04-14T16:52:17Z" finished-at="2019-04-14T16:52:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mmahir001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2f3eaddb-6af6-4b06-9dc8-2084b05379f8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[googlechrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@215be6bb]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:19Z" finished-at="2019-04-14T16:52:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.VerifyTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="VerifyTitle()[pri:0, instance:tests.InstaTester@215be6bb]" name="VerifyTitle" duration-ms="6" started-at="2019-04-14T16:52:19Z" finished-at="2019-04-14T16:52:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTitle -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@215be6bb]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:19Z" finished-at="2019-04-14T16:52:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@215be6bb]" name="afterEachTestMethod" is-config="true" duration-ms="99" started-at="2019-04-14T16:52:19Z" finished-at="2019-04-14T16:52:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTitle status=SUCCESS method=InstaTester.VerifyTitle()[pri:0, instance:tests.InstaTester@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@215be6bb]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T16:52:19Z" finished-at="2019-04-14T16:52:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:tests.InstaTester@215be6bb]" name="generateReport" is-config="true" duration-ms="17" started-at="2019-04-14T16:52:31Z" finished-at="2019-04-14T16:52:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- tests.InstaTester -->
    </test> <!-- Instagram Home Page -->
  </suite> <!-- Amazon Automation Script  -->
</testng-results>
