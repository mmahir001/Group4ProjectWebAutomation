<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="18" passed="18">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/muhtasimmahir/IdeaProjects/Group4ProjectWebAutomation/Instagram/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite name="Amazon Automation Script " duration-ms="51983" started-at="2019-04-14T01:56:17Z" finished-at="2019-04-14T01:57:09Z">
    <groups>
    </groups>
    <test name="Instagram Home Page" duration-ms="51983" started-at="2019-04-14T01:56:17Z" finished-at="2019-04-14T01:57:09Z">
      <class name="tests.InstaTester">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="extentSetup" is-config="true" duration-ms="144" started-at="2019-04-14T01:56:17Z" finished-at="2019-04-14T01:56:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e57b5e9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/muhtasimmahir/IdeaProjects/Group4ProjectWebAutomation/Instagram/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="2772" started-at="2019-04-14T01:56:17Z" finished-at="2019-04-14T01:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="4" started-at="2019-04-14T01:56:20Z" finished-at="2019-04-14T01:56:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickAPI()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="19" started-at="2019-04-14T01:56:20Z" finished-at="2019-04-14T01:56:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickAPI()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickAPI" duration-ms="344" started-at="2019-04-14T01:56:20Z" finished-at="2019-04-14T01:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAPI -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="309" started-at="2019-04-14T01:56:21Z" finished-at="2019-04-14T01:56:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAPI status=SUCCESS method=InstaTester.ClickAPI()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:21Z" finished-at="2019-04-14T01:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1963" started-at="2019-04-14T01:56:21Z" finished-at="2019-04-14T01:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:23Z" finished-at="2019-04-14T01:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:23Z" finished-at="2019-04-14T01:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickAboutUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickAboutUs()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickAboutUs" duration-ms="291" started-at="2019-04-14T01:56:23Z" finished-at="2019-04-14T01:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickAboutUs -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="105" started-at="2019-04-14T01:56:23Z" finished-at="2019-04-14T01:56:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickAboutUs status=SUCCESS method=InstaTester.ClickAboutUs()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:23Z" finished-at="2019-04-14T01:56:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1957" started-at="2019-04-14T01:56:23Z" finished-at="2019-04-14T01:56:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:25Z" finished-at="2019-04-14T01:56:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickDirectory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:25Z" finished-at="2019-04-14T01:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickDirectory()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickDirectory" duration-ms="456" started-at="2019-04-14T01:56:25Z" finished-at="2019-04-14T01:56:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDirectory -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="101" started-at="2019-04-14T01:56:26Z" finished-at="2019-04-14T01:56:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickDirectory status=SUCCESS method=InstaTester.ClickDirectory()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:26Z" finished-at="2019-04-14T01:56:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1914" started-at="2019-04-14T01:56:26Z" finished-at="2019-04-14T01:56:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:28Z" finished-at="2019-04-14T01:56:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:28Z" finished-at="2019-04-14T01:56:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickHashtags()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickHashtags()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickHashtags" duration-ms="416" started-at="2019-04-14T01:56:28Z" finished-at="2019-04-14T01:56:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickHashtags -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="103" started-at="2019-04-14T01:56:28Z" finished-at="2019-04-14T01:56:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickHashtags status=SUCCESS method=InstaTester.ClickHashtags()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1961" started-at="2019-04-14T01:56:28Z" finished-at="2019-04-14T01:56:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:28Z" finished-at="2019-04-14T01:56:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:30Z" finished-at="2019-04-14T01:56:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickJobs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickJobs()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickJobs" duration-ms="762" started-at="2019-04-14T01:56:30Z" finished-at="2019-04-14T01:56:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickJobs -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:30Z" finished-at="2019-04-14T01:56:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="107" started-at="2019-04-14T01:56:31Z" finished-at="2019-04-14T01:56:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickJobs status=SUCCESS method=InstaTester.ClickJobs()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:31Z" finished-at="2019-04-14T01:56:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1832" started-at="2019-04-14T01:56:31Z" finished-at="2019-04-14T01:56:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:33Z" finished-at="2019-04-14T01:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:33Z" finished-at="2019-04-14T01:56:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickLanguage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickLanguage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickLanguage" duration-ms="317" started-at="2019-04-14T01:56:33Z" finished-at="2019-04-14T01:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLanguage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="101" started-at="2019-04-14T01:56:33Z" finished-at="2019-04-14T01:56:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLanguage status=SUCCESS method=InstaTester.ClickLanguage()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:33Z" finished-at="2019-04-14T01:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1979" started-at="2019-04-14T01:56:33Z" finished-at="2019-04-14T01:56:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:35Z" finished-at="2019-04-14T01:56:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:35Z" finished-at="2019-04-14T01:56:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickLogIn()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickLogIn()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickLogIn" duration-ms="108" started-at="2019-04-14T01:56:35Z" finished-at="2019-04-14T01:56:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickLogIn -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="100" started-at="2019-04-14T01:56:35Z" finished-at="2019-04-14T01:56:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickLogIn status=SUCCESS method=InstaTester.ClickLogIn()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:35Z" finished-at="2019-04-14T01:56:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1911" started-at="2019-04-14T01:56:35Z" finished-at="2019-04-14T01:56:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:37Z" finished-at="2019-04-14T01:56:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickPress()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickPress()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickPress" duration-ms="602" started-at="2019-04-14T01:56:37Z" finished-at="2019-04-14T01:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPress -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:37Z" finished-at="2019-04-14T01:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="101" started-at="2019-04-14T01:56:38Z" finished-at="2019-04-14T01:56:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPress status=SUCCESS method=InstaTester.ClickPress()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1909" started-at="2019-04-14T01:56:38Z" finished-at="2019-04-14T01:56:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:38Z" finished-at="2019-04-14T01:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:40Z" finished-at="2019-04-14T01:56:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickPrivacy()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:40Z" finished-at="2019-04-14T01:56:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickPrivacy()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickPrivacy" duration-ms="1606" started-at="2019-04-14T01:56:40Z" finished-at="2019-04-14T01:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickPrivacy -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="110" started-at="2019-04-14T01:56:42Z" finished-at="2019-04-14T01:56:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickPrivacy status=SUCCESS method=InstaTester.ClickPrivacy()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:42Z" finished-at="2019-04-14T01:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1931" started-at="2019-04-14T01:56:42Z" finished-at="2019-04-14T01:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:44Z" finished-at="2019-04-14T01:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickProfiles()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:44Z" finished-at="2019-04-14T01:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickProfiles()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickProfiles" duration-ms="439" started-at="2019-04-14T01:56:44Z" finished-at="2019-04-14T01:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickProfiles -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="98" started-at="2019-04-14T01:56:44Z" finished-at="2019-04-14T01:56:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickProfiles status=SUCCESS method=InstaTester.ClickProfiles()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:44Z" finished-at="2019-04-14T01:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1822" started-at="2019-04-14T01:56:44Z" finished-at="2019-04-14T01:56:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:46Z" finished-at="2019-04-14T01:56:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickSignUp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:46Z" finished-at="2019-04-14T01:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickSignUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickSignUp" duration-ms="96" started-at="2019-04-14T01:56:46Z" finished-at="2019-04-14T01:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSignUp -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="99" started-at="2019-04-14T01:56:46Z" finished-at="2019-04-14T01:56:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSignUp status=SUCCESS method=InstaTester.ClickSignUp()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1751" started-at="2019-04-14T01:56:46Z" finished-at="2019-04-14T01:56:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:46Z" finished-at="2019-04-14T01:56:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:48Z" finished-at="2019-04-14T01:56:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickSupport()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:48Z" finished-at="2019-04-14T01:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="ClickSupport()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickSupport" duration-ms="2051" started-at="2019-04-14T01:56:48Z" finished-at="2019-04-14T01:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickSupport -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="107" started-at="2019-04-14T01:56:50Z" finished-at="2019-04-14T01:56:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickSupport status=SUCCESS method=InstaTester.ClickSupport()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:50Z" finished-at="2019-04-14T01:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1880" started-at="2019-04-14T01:56:50Z" finished-at="2019-04-14T01:56:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T01:56:52Z" finished-at="2019-04-14T01:56:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.ClickTerms()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="ClickTerms()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="ClickTerms" duration-ms="7125" started-at="2019-04-14T01:56:52Z" finished-at="2019-04-14T01:56:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickTerms -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:52Z" finished-at="2019-04-14T01:56:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="104" started-at="2019-04-14T01:56:59Z" finished-at="2019-04-14T01:56:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickTerms status=SUCCESS method=InstaTester.ClickTerms()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1907" started-at="2019-04-14T01:56:59Z" finished-at="2019-04-14T01:57:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:56:59Z" finished-at="2019-04-14T01:56:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:57:01Z" finished-at="2019-04-14T01:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:01Z" finished-at="2019-04-14T01:57:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterEmailOrPhone()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="EnterEmailOrPhone()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="EnterEmailOrPhone" duration-ms="167" started-at="2019-04-14T01:57:01Z" finished-at="2019-04-14T01:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterEmailOrPhone -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="97" started-at="2019-04-14T01:57:01Z" finished-at="2019-04-14T01:57:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterEmailOrPhone status=SUCCESS method=InstaTester.EnterEmailOrPhone()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:01Z" finished-at="2019-04-14T01:57:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1937" started-at="2019-04-14T01:57:01Z" finished-at="2019-04-14T01:57:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:03Z" finished-at="2019-04-14T01:57:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterFullName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="1" started-at="2019-04-14T01:57:03Z" finished-at="2019-04-14T01:57:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="EnterFullName()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="EnterFullName" duration-ms="142" started-at="2019-04-14T01:57:03Z" finished-at="2019-04-14T01:57:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterFullName -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="104" started-at="2019-04-14T01:57:03Z" finished-at="2019-04-14T01:57:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterFullName status=SUCCESS method=InstaTester.EnterFullName()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="1" started-at="2019-04-14T01:57:04Z" finished-at="2019-04-14T01:57:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1795" started-at="2019-04-14T01:57:04Z" finished-at="2019-04-14T01:57:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="1" started-at="2019-04-14T01:57:05Z" finished-at="2019-04-14T01:57:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:05Z" finished-at="2019-04-14T01:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="EnterPassword()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="EnterPassword" duration-ms="107" started-at="2019-04-14T01:57:05Z" finished-at="2019-04-14T01:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterPassword -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="100" started-at="2019-04-14T01:57:05Z" finished-at="2019-04-14T01:57:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterPassword status=SUCCESS method=InstaTester.EnterPassword()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1806" started-at="2019-04-14T01:57:06Z" finished-at="2019-04-14T01:57:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:06Z" finished-at="2019-04-14T01:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:07Z" finished-at="2019-04-14T01:57:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.EnterUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:07Z" finished-at="2019-04-14T01:57:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="EnterUsername()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="EnterUsername" duration-ms="122" started-at="2019-04-14T01:57:07Z" finished-at="2019-04-14T01:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterUsername -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="95" started-at="2019-04-14T01:57:08Z" finished-at="2019-04-14T01:57:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterUsername status=SUCCESS method=InstaTester.EnterUsername()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="setUp" is-config="true" duration-ms="1705" started-at="2019-04-14T01:57:08Z" finished-at="2019-04-14T01:57:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Sierra]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[30.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.instagram.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:08Z" finished-at="2019-04-14T01:57:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="startExtent" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:09Z" finished-at="2019-04-14T01:57:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.InstaTester.VerifyTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initilizeSignUpPage()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="initilizeSignUpPage" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:09Z" finished-at="2019-04-14T01:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilizeSignUpPage -->
        <test-method status="PASS" signature="VerifyTitle()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="VerifyTitle" duration-ms="5" started-at="2019-04-14T01:57:09Z" finished-at="2019-04-14T01:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyTitle -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="afterEachTestMethod" is-config="true" duration-ms="95" started-at="2019-04-14T01:57:09Z" finished-at="2019-04-14T01:57:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyTitle status=SUCCESS method=InstaTester.VerifyTitle()[pri:0, instance:tests.InstaTester@5cc7c2a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="cleanUp" is-config="true" duration-ms="0" started-at="2019-04-14T01:57:09Z" finished-at="2019-04-14T01:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:tests.InstaTester@5cc7c2a6]" name="generateReport" is-config="true" duration-ms="15" started-at="2019-04-14T01:57:09Z" finished-at="2019-04-14T01:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- tests.InstaTester -->
    </test> <!-- Instagram Home Page -->
  </suite> <!-- Amazon Automation Script  -->
</testng-results>
